#spring.main.banner-mode=off
server.port=8000

# Loads SQL scripts? schema.sql and data.sql true by default
#spring.datasource.initialize=false
#spring.datasource.schema=
#spring.datasource.data=

# Uncomment this to create database manually or comment to create embedded database
# it adjusts automatically because of maven JDBC driver dependency
# file
#spring.datasource.url=jdbc:derby://localhost:1527/DERBY_DB;create=true
#spring.datasource.url=jdbc:derby:memory:testdb;create=true // in memory
#spring.datasource.username=sa
#spring.datasource.password=

# In documentation driver name doesn't need because of JDBC 4.0
# Spring register org.apache.derby.jdbc.EmbeddedDriver by means of DatabaseDriver.fromJdbcUrl() based on jdbc url
# Then spring loads embedded database and its scripts
# JDBC API registers org.apache.derby.jdbc.AutoloadedDriver based on service provider
# Then Hikari compare these two ones and fails to load EmbeddedDriver, so we need explicit define it:
#spring.datasource.driver-class-name=org.apache.derby.jdbc.AutoloadedDriver

# Hibernate
# default is create-drop for embedded and none for usual databases
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.properties.hibernate.jdbc.time_zone = UTC

# Jackson
# dates serialization
#spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
#spring.jackson.date-format=com.fasterxml.jackson.databind.util.StdDateFormat

# HikariCP settings
# spring.datasource.hikari.*
#60 sec
spring.datasource.hikari.connection-timeout=60000
# we want only one because derby in embedded mode supports only one
spring.datasource.hikari.maximum-pool-size=5

